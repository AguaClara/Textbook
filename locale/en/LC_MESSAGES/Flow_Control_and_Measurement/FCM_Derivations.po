# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, AguaClara Cornell
# This file is distributed under the same license as the AguaClara Textbook
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AguaClara Textbook EXPERIMENTAL\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-19 16:17-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:5
msgid "Flow Control and Measurement Derivations"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:12
msgid ":math:`Q(t)` for a Tank with a Valve"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:13
msgid ""
"This document contains the derivation of the flow through a tank-"
"with-a-valve over time, :math:`Q(t)`. Our reference will be a simple "
"hypochlorinator, shown in the following image. In the image, a "
"hypochlorite solution is slowly dripping and mixing with piped source "
"water, thereby disinfecting it. The valve is almost closed to make sure "
"that the hypochlorite solution drips instead of flows. At the end of this"
" document is an image which shows the variables in the final equation."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:22
msgid ""
"This is a common setup for chlorinating water before distributing it to a"
" nearby community."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:24
msgid ""
"This derivation begins by finding two equations for flow, :math:`Q`, "
"through the hypochlorinator and setting them equal to each other. First, "
"the rate of change of the volume of hypochlorite solution in the tank is "
"equivalent to the flow out of the hypochlorinator. Since the volume of "
"hypochlorite solution in the tank is equal to the tank’s cross-sectional "
"area times it height, we get the following equation:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:30
#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:104
#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:134
#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:253
msgid "Such that:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:31
msgid ""
":math:`\\frac{d\\rlap{-}V}{dt}` = rate of change in volume of solution "
"in the tank"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:32
msgid ""
":math:`\\frac{dh}{dt}` = rate of change in height of water (hypochlorite "
"solution) level with time"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:34
msgid ""
"Our other equation for flow is the head loss equation. Since major losses"
" are negligible for a short pipe-low flow rate system, we only need to "
"consider minor losses. The only real minor loss in this system occurs in "
"the almost-closed valve that is dripping the hypochlorite solution. "
"However, we will also use the head loss trick. Therefore, the total "
"driving head of the system :math:`h` is equal to the minor losses:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:40
msgid ""
"Bear in mind that this is the second form of the minor loss equation as "
"described in :ref:`this derivation <heading_final_minor_loss_equations>`."
" Rearranging the minor loss equation to solve for :math:`Q`, it looks "
"like this:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:46
msgid ""
"Now we can set both equations for :math:`Q` equal to each other and move "
"them both to one side:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:52
msgid ""
"From here, calculus and equation substitution dominate the derivation. "
"Separating the variables of the equation immediately above, we get the "
"following integral:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:58
msgid "Which, when integrated, yields:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:64
msgid "And solved for :math:`\\sqrt{h}` returns:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:70
msgid ""
"At this point, the steps and equation substitutions may begin to seem "
"unintuitive. Do not worry if you do not understand why *exactly* a "
"particular substitution is occurring. Since we determined above that "
":math:`h_e = h`, our equation above for :math:`\\sqrt{h}` is also an "
"equation for :math:`\\sqrt{h_e}`. As such, we will plug the equation "
"above back into the minor loss equation solved for :math:`Q` from above, "
":math:`Q = A_{Valve} \\sqrt{\\frac{2 h_e g}{\\sum K}}`, to produce:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:76
msgid ""
"Now we can focus on getting rid of the variables :math:`A_{Valve}`, "
":math:`\\sum K`, and :math:`A_{tank}`. By using the minor loss equation "
"once more, we can remove both :math:`A_{Valve}` and :math:`\\sum K`. "
"Consider the initial state of the system, when the hypochlorinator is set"
" up and starts dropping its first few drops of hypochlorite solution into"
" the water. The initial flow rate, :math:`Q_0`, and elevation difference "
"between the water level and the valve, :math:`h_0`, can be input into the"
" minor loss equation, which can then be solved for :math:`A_{Valve}`:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:82
msgid ""
"Plugging this equation for :math:`A_{Valve}` into the equation for "
":math:`Q` just above, we get the following two equations, in which the "
"second equation is a simplified version of the first:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:92
msgid ""
"This next step will eliminate :math:`A_{Tank}`. However, it requires some"
" clever manipulation that has a tendency to cause some confusion. We will"
" define a new parameter, :math:`t_{Design}`, which represents the time it"
" would take to empty the tank if the initial flow rate through the valve,"
" :math:`Q_0`, stays constant in time. Of course, the flow :math:`Q` "
"through the valve does not stay constant in time, which is why this "
"derivation document exists. But imagining this hypothetical "
":math:`t_{Design}` parameter allows us to form the following equation:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:98
msgid ""
"This equation describes draining all the hypochlorite solution from the "
"tank. The volume of the solution, :math:`A_{Tank} h_{Tank}`, is drained "
"in :math:`t_{Design}`. Rearranged, the equation becomes:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:105
msgid ""
":math:`h_{Tank}` = elevation of water level in the tank with reference to"
" tank bottom at the initial state, :math:`t = 0`"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:107
msgid ""
"Here lies another common source of confusion. :math:`h_{Tank}` is not the"
" same as :math:`h_{0}`. :math:`h_{Tank}` is the height of water level in "
"the tank with reference to the tank bottom. :math:`h_{0}` is the water "
"level in the tank with reference to the valve. Therefore, :math:`h_{0} "
"\\geq h_{Tank}` is true if the valve is located at or below the bottom of"
" the tank. If the tank is elevated far above the valve, then the "
":math:`h_{0} > > h_{Tank}`. If the valve is at the same elevation as the "
"bottom of the tank, then :math:`h_{0} = h_{Tank}`. Please refer to the "
"following image to clarify :math:`h_{0}` and :math:`h_{Tank}`. Also note "
"that both :math:`h_{Tank}` and :math:`h_{0}` are not variables, they are "
"constants which are defined by the initial state of the hypochlorinator, "
"when the solution just begins to flow."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:116
msgid ""
":math:`Q_0 =` initial flow rate of hypochlorite solution at time :math:`t"
" = 0`, :math:`t_{Design} =` time it would take to drain the tank if flow "
"was held constant at :math:`Q_0`"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:118
msgid ""
"Finally, our fabricated equivalence, :math:`\\frac{Q_0}{A_{Tank}} = "
"\\frac{h_{Tank}}{t_{Design}}` can be plugged into :math:`\\frac{Q}{Q_0} ="
" 1 - \\frac{t Q_0}{2 A_{Tank} h_0}` to create the highly useful equation "
"for flow rate as a function of time for a drip hypochlorinator:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:126
msgid "Which can be slightly rearranged to yield:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:135
msgid ":math:`Q = Q(t)` = flow of hypochlorite through valve at time :math:`t`"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:136
msgid ":math:`t` = elapsed time"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:137
msgid ""
":math:`t_{Design}` = time it would take for tank to empty *if* flow "
"stayed constant at :math:`Q_0`, which it does not"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:138
msgid ":math:`h_{Tank}` = elevation of water level with reference to tank bottom"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:139
msgid ":math:`h_0` = elevation of water level with reference to the valve"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:141
msgid ""
"“How does this ‘tank with a valve’ scenario differ from the ‘hole in a "
"bucket’ scenario?” some might ask. If you are interested, you may go "
"through the derivation on your own using the orifice equation instead of "
"the minor loss equation for the first step. If you do so you’ll find that"
" the equation remains almost the same, the only difference being that the"
" :math:`\\frac{h_{Tank}}{h_0}` term drops out for an orifice, as "
":math:`h_{Tank} = h_0`. The big difference in the systems lies with the "
"flexibility of having a valve. It can be tightened or loosened to change "
"the flow rate, whereas changing the size of an orifice multiple times in "
"a row is not recommended and is usually irreversible."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:149
msgid ":math:`D(t)` and :math:`t(D)` for Tank Drain Equation"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:150
msgid ""
"This document contains the derivation of :math:`D_{Pipe}`, which is the "
"pipe diameter necessary to install in a drain system to entirely drain a "
"tank in time :math:`t_{Drain}`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:152
msgid ""
"First, it is necessary to understand how AguaClara tank drains work and "
"what they look like. Many tanks, including the flocculator and entrance "
"tank, have a hole in their bottoms which are fitted with pipe couplings. "
"During normal operation, these couplings have pipe stubs in them, and the"
" pipe stubs are tall enough to go above the water level in the tank and "
"not allow water to flow into the drain. When the pipe stub is removed, "
"the water begins to flow out of the drain, as the image below indicates. "
"The drain pipe consists of pipe and one elbow, shown in the image."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:161
msgid "This is AguaClara's alternatives to having valves."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:163
msgid ""
"While AguaClara sedimentation tanks use valves instead of pipe to begin "
"the process of draining, the actual drain piping system is the same, pipe"
" and an elbow. The equation that will soon be derived applies to both "
"pipe stub and valve drains."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:165
msgid ""
"We will start the derivation from the following equation, which is found "
"in an intermediate step from the ':math:`Q(t)` "
":ref:`heading_flow_for_a_tank_with_a_valve`.' While this system does not "
"have a valve, it has other sources of minor loss and therefore the "
"equation is still valid."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:171
msgid ""
"We need to make some adjustments to this equation before proceeding, to "
"make it applicable for this new drain-system scenario. First, we want to "
"assume that the tank has fully drained. Thus, :math:`t = t_{Drain}` and "
":math:`h = 0`. Next, we recall that the tank drain is not actually a "
"valve, but just pipe and an elbow, so :math:`A_{Valve} = A_{Pipe}`. "
"Additionally, there can be multiple points of minor loss in the drain "
"system: the entrance from the tank into the drain pipe, the elbow, and "
"potentially the exit of the water out of the drain pipe. When considering"
" a sedimentation tank, the open valve required to begin drainage also has"
" a minor loss associated with it. Therefore, it is necessary to "
"substitute :math:`\\sum K` for :math:`K` With these substitutions, the "
"equation becomes:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:177
msgid ""
"Now, with the knowledge that :math:`A_{Pipe} = \\frac{\\pi "
"D_{Pipe}^2}{4}` and rearranging to solve for :math:`D_{Pipe}`, we obtain "
"the following equation:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:183
msgid ""
"To get the equation in terms of easily measureable tank parameters, we "
"substitute :math:`L_{Tank} W_{Tank}` for :math:`A_{Tank}`. To maintain "
"consistency in variable names, we substitute :math:`H_{Tank}` for "
":math:`h_0`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:185
msgid ""
"By saying that :math:`h_0 = H_{Tank}`, we are making the assumption that "
"the pipe drain is at the same elevation as the bottom of the tank. The "
"pipe drain is actually a little lower than the bottom of the tank, but "
"that would make the tank drain faster than :math:`t_{Drain}`, which is "
"preferred. Therefore, we are designing a slight safety factor when we say"
" that :math:`h_0 = H_{Tank}`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:187
msgid "Finally, we arrive at the equation for drain pipe sizing:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:195
msgid ""
"We can also easily rearrange to find the time required to drain a tank "
"given a drain diameter:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:203
msgid "Such that the variables are as the appear in the image below."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:212
msgid ""
":math:`L_{Tank}` is the length of the tank which goes the page. :math:`K`"
" is the aggregate minor loss coefficient of the drain system."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:219
msgid "Design Equations for the Linear Chemical Dose Controller (CDC)"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:220
msgid ""
"This document will include the equation derivations required to design a "
"CDC system. The most important restriction in this design process is "
"maintaining linearity between head :math:`h` and flow :math:`Q`, which is"
" the entire purpose of the CDC. Recall that major losses under laminar "
"flow scale with :math:`Q` and minor losses scale with :math:`Q^2` Since "
"it is impossible to remove minor losses from the system entirely, we will"
" simply try to make minor losses very small compared to major losses. The"
" CDC does this by including ‘dosing tube(s),’ which are long, straight "
"tubes designed to generate a lot of major losses. There can be one tube "
"or multiple, depending on the design conditions."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:222
msgid ""
"We will use the ‘head loss trick’ that was introduced in the Fluids "
"Review section. Therefore, the elevation difference between the water "
"level in the constant head tank (CHT) and the end of the tube connected "
"to the slider, :math:`\\Delta h`, is equal to the head loss between the "
"two points, :math:`h_L`. Thus, :math:`\\Delta h = h_L = h_e + h_f`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:232
msgid "Visual representation of CDC."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:238
msgid "CDC Design Equation Derivation"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:239
msgid ""
"**When designing the CDC, there are a few parameters which are picked and"
" set initially, before applying any equations. These parameters are:**"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:241
msgid ""
":math:`D` = tube diameter. only certain tubing diameters are manufactured"
" (like :math:`\\frac{x}{16}` inch), so an array of available tube "
"diameters is set initially."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:242
msgid ""
":math:`\\sum K` = sum of minor loss coefficients for the whole system. "
"This is also set initially, it is usually 2."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:243
msgid ""
":math:`h_{L_{Max}}` = maximum elevation difference between CHT water "
"level and outlet of solution. This parameter is usually 20 cm."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:245
msgid ""
"We begin by defining the head loss through the system :math:`h_L`, which "
"is equivalent to defining the driving head :math:`\\Delta h`. Major "
"losses will be coded as red."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:254
msgid ""
":math:`\\nu` = kinematic viscosity *of the solution going through the "
"dosing tube(s)*. This is either coagulant or chlorine"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:255
msgid ":math:`Q` = flow rate through the dosing tube(s)"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:256
msgid ":math:`L` = length of the dosing tube(s)"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:258
msgid ""
"‘Tube(s)’ is used because there may be 1 or more dosing tubes depending "
"on the particular design."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:260
msgid "Minor losses are equal to:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:266
msgid ""
"Therefore, the total head loss is a function of flow, and is shown in the"
" following equation."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:275
msgid ""
"Blue will be used to reference *actual* head loss from now on. This is "
"the same equation as above."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:283
msgid ""
"This equation is not linear with respect to flow. We can make it linear "
"by turning the variable :math:`Q` in the :math:`\\frac{8Q}{g \\pi ^2 D^4}"
" \\sum{K}` term into a constant. To do this, we pick a maximum flow rate "
"of coagulant/chlorine through the dose controller, :math:`Q_{Max}`, and "
"put that into the term in place of :math:`Q`. The term becomes "
":math:`\\frac{8Q_{Max}}{g \\pi ^2 D^4} \\sum{K}`, and our linearized "
"model of head loss, coded as green, becomes:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:291
msgid ""
"Here is a plot of the three colored equations above. Our goal is to "
"minimize the minor losses in the system; to bring the red and blue curves"
" as close as possible to the green one."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:300
msgid ""
"MathCAD generated graph for linearity error analysis. TODO: make this in "
"python"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:303
msgid "Designing for the error constraint, :math:`\\Pi_{Error}`"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:304
msgid ""
"The first step in the design is to make sure that major losses far exceed"
" minor losses. This will result in an equation for the maximum velocity "
"that can go through the dosing tube(s), :math:`\\color{purple}{\\bar "
"v_{Max} }`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:306
#, python-format
msgid ""
"Minor losses will never be 0, so how much error in our linearity are we "
"willing to accept? Let’s define a new parameter, :math:`\\Pi_{Error}`, as"
" the maximum amount of error we are willing to accept. We are ok with 10%"
" error or less, so :math:`\\Pi_{Error} = 0.1`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:316
msgid ""
"Now we plug :math:`\\color{blue}{ h_L(Q) }` and :math:`\\color{green}{ "
"h_{L_{linear}} }` back into the equation for :math:`1 - \\Pi_{Error}` and"
" take the limit as :math:`Q \\rightarrow 0`, as that is when the relative"
" difference between actual head loss and our linear model for head loss "
"is the greatest."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:331
msgid ""
"The next steps are algebraic rearrangements to solve for :math:`L`. This "
":math:`L` describes the *minimum* length of dosing tube necessary to meet"
" our error constraint at *maximum* flow. Thus, we will refer to it as "
":math:`L_{Min, \\, \\Pi_{Error}}`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:349
msgid "Note that this equation is independent of head loss."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:351
msgid ""
"Unfortunately, both :math:`L_{Min, \\, \\Pi_{Error}}` and :math:`Q_{Max}`"
" are unknowns. We can plug this equation for :math:`L_{Min, \\, "
"\\Pi_{Error}}` back into the head loss equation at maximum flow, which is"
" :math:`h_{L_{Max}} = \\left( \\frac{128\\nu L Q_{Max}}{g \\pi D^4} + "
"\\frac{8Q_{Max}^2}{g \\pi ^2 D^4} \\sum{K} \\right)` and rearrange for "
":math:`Q_{Max}` to get:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:357
msgid ""
"**Function in aguaclara** ``cdc.max_linear_flow(Diam, HeadlossCDC, "
"Ratio_Error, KMinor)`` Returns the maximum flow :math:`Q_{Max}` that can "
"go through a dosing tube will making sure that linearity between head "
"loss and flow is conserved."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:359
msgid ""
"From this equation for :math:`Q_{Max}`, we can get to our first design "
"equation, :math:`\\color{purple}{\\bar v_{Max}}` by using the continuity "
"Equation :math:`\\bar v_{Max} = \\frac{Q_{Max}}{\\frac{\\pi D^2}{4}}`"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:368
msgid "Designing for the proper amount of head loss, :math:`h_{L_{Max}}`"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:369
msgid ""
"The second step in the design is to make sure that the maximum head loss "
"corresponds to the maximum flow of chemicals. This will result in an "
"equation for the length of the dosing tube(s), "
":math:`\\color{purple}{L_{Min} }`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:371
msgid ""
"We previously derived an equation for the minimum length of the dosing "
"tube(s), :math:`L_{Min, \\, \\Pi_{Error}}`, which was the minimum length "
"needed to ensure that our linearity constraint was met. This equation is "
"shown again below, in red:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:379
msgid ""
"This equation does not, however, account for getting to the proper amount"
" of head loss. If we were to use this equation to design the dosing "
"tubes, we might not end up with the proper amount of flow :math:`Q_{Max}`"
" at the maximum head loss :math:`h_{L{Max}}`. So we need to double check "
"to make sure that we get our desired head loss."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:381
msgid ""
"First, consider the head loss at maximum flow that was used to get the "
"equation for :math:`Q_{Max}`:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:387
msgid ""
"Now that we know all of the parameters in this equation except for "
":math:`L`, we can solve the equation for :math:`L`. This the *shortest* "
"tube that generates our required head loss, :math:`h_{L_{Max}}`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:396
msgid ""
"**Function in aguaclara:** ``cdc._length_cdc_tube_array(FlowPlant, "
"ConcDoseMax, ConcStock, DiamTubeAvail, HeadlossCDC, temp, en_chem, "
"KMinor)`` Returns :math:`\\color{purple}{L_{Min}}`, takes in the flow "
"rate input of *plant design flow rate*."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:398
msgid ""
"**Function in aguaclara:** ``cdc._len_tube(Flow, Diam, HeadLoss, "
"conc_chem, temp, en_chem, KMinor)`` Returns "
":math:`\\color{purple}{L_{Min}}`, takes in the flow rate input of *max "
"flow rate through the dosing tube(s)*."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:400
msgid ""
"If you decrease the max flow :math:`Q_{Max}` and hold :math:`h_{L_{Max}}`"
" constant, :math:`\\color{green}{L_{Min, \\, head loss}}` becomes larger."
" This means that a CDC system for a plant of 40 :math:`\\frac{L}{s}` must"
" be different than one for a plant of 20 :math:`\\frac{L}{s}`. If we want"
" to maintain the same head loss at maximum flow in both plants, then the "
"dosing tube(s) will need to be a lot longer for the 20 "
":math:`\\frac{L}{s}` plant."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:402
msgid ""
"To visualize the distinction between :math:`\\color{red}{  L_{Min, \\, "
"\\Pi_{Error}}}` and :math:`\\color{green}{ L_{Min, \\, head loss}}`, see "
"the following plot. :math:`\\color{green}{ L_{Min, \\, head loss}}` is "
"discontinuous because it takes in the smallest allowable tube diameter as"
" an input. As the chemical flow rate through the dosing tube(s) "
"decreases, the dosing tube diameter does as well. Whenever you see a jump"
" in the green points, that means the tubing diameter has changed."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:411
msgid "CDC length modeling in MathCAD."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:413
msgid ""
"As you can see, the head loss constraint is more limiting than the "
"linearity constraint when designing for tube length. Therefore, the "
"design equation for tube length is the one which accounts for head loss. "
"This is the second and final design equation for designing the CDC:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:423
msgid ""
"The equations for :math:`\\color{purple}{\\bar v_{Max}}` and "
":math:`\\color{purple}{L_{Min}}` are the only ones you **need** to "
"manually design a CDC."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:427
msgid "CDC Dosing Tube(s) Diameter :math:`D_{Min}` Plots"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:428
msgid ""
"Below are equations which also govern the CDC and greatly aid in "
"understanding the physics behind it, but are not strictly necessary in "
"design."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:430
msgid ""
"By rearranging :math:`Q_{Max} = \\frac{\\pi D^2}{4} \\sqrt{\\frac{2 h_L g"
" \\Pi_{Error}}{\\sum K }}`, we can solve for :math:`D` to get the "
"*minimum* diameter we can use assuming the shortest tube possible that "
"meets the error constraint, :math:`\\color{red}{L_{Min, \\, "
"\\Pi_{Error}}}`. If we use a diameter smaller than :math:`D_{Min, \\, "
"\\Pi_{Error}}`, we will not be able to simultaneously reach "
":math:`Q_{Max}` and meet the error constraint :math:`\\Pi_{Error}`."
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:438
msgid ""
"We can also find the minimum diameter needed to guarantee laminar flow, "
"which is another critical condition in the CDC design. We can do this by "
"combining the equation for Reynolds number at the maximum "
":math:`\\rm{Re}` for laminar flow, :math:`{\\rm{Re}}_{Max} = 2100` with "
"the continuity equation at maximum flow:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:448
msgid "To get:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:456
msgid ""
"Combined with the discrete amount of tubing sizes (shown in dark green), "
"we can create a graph of the three diameter constraints:"
msgstr ""

#: ../../Flow_Control_and_Measurement/FCM_Derivations.rst:465
msgid "CDC diameter modeling in MathCAD."
msgstr ""

