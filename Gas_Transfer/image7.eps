%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (C:/Users/mw24/AppData/Local/Temp/magick-6832__y6HtOBEzv4)
%%CreationDate: (2018-08-31T14:30:31-04:00)
%%BoundingBox: -0 -0 54 15
%%HiResBoundingBox: 0 0 53.8058 15
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 54 15
userdict begin
DisplayImage
0 0
53.8058 15.1329
12
64 18
1
1
1
8
444E4D4D4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E
4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4D4D4D4D4D4D4D4E534CFF4ECCD3D0D0D0D0D0
D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0
D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0CFBE82FF4ECDDAD7CECECECECECECECECECECECE
CECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECE
CECECECECECECECEC0936CFF4ECBD6D9CCC8C9C8C9C8C9C8C8C8C8C8C8C8C8C8C8C8C8C8
C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C8CAC5
AE8E6AFF4ECBD5DBD4CCCCCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCB
CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCABDA58868FF4ECAD3DA
D9CBC9CACACACACACACACACACACACACACACACACACACAC9CBD4D5CCC8D0CCC9D1CBC9CACA
CACACACACACACACACACACAC9C9C9C9C9C9CAC7B59D8367FF4ECAD2D8D9C9C5C6C6C6C6C6
C6C6C6C6C6C6C6C6C6C6C6C6C6C6C8CB8D89C5CDAABBD2A4BBC8C6C6C6C6C6C6C6C6C6C6
C6C6C6C6C6C5C5C5C6C7C3AF987F65FF4EC9D1D5D5C6C2C3C3C3C3C3C3C3C3C3C3C3C3C3
C3C3C3C3C3C3CD784F566BD446A69F54B9C6C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C2C2C2
C3C4C0AB937B64FF4EC8D0D4D2C3BFC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0CC7566
D0D5787056725BBAC7C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C1BEAA917962FF
4EC9CFD2CFC1BEBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCF5084CCC69D4E4810C3C7
BEBFBFBFBFBFBFBFBFBFBFBFBFBFBFBEBEBEBEBEBEBFBCA88F7862FF4EC9CFD0CBBEBBBC
BCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCC537CCDC9954F523988C8BDBCBCBCBCBCBCBC
BCBCBCBCBCBCBCBCBCBCBCBCBCBDBAA68F7962FF4ECACFCEC8BBB8B9B9B9B9B9B9B9B9B9
B9B9B9B9B9B9B9B9B9BDA555929D56A34794627ABDBAB9B9B9B9B9B9B9B9B9B9B8B8B8B8
B8B8B8B8B8BAB7A6927C64FF4ECAD0CEC3B7B4B5B5B5B5B5B5B4B4B4B4B4B4B4B4B4B4B4
B4B4BEA2413E94C7659EBB60A3B8B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B5B6B4A8
967F66FF4ECBD1CBBDB2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B5B9B9B6B1
B9B4B3B8B3B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B3AD9D8467FF4ECBD1CA
B9B5B6B6B6B6B6B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B6B6B5B5B6B5B5B6B5B5B5B5
B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B5B6B5A68A69FF4ECFD8BEB2B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3AC946CFF52B6948482838383838383838383838383838383
838383838383838383838383838383838383838383838383838383838383838383838383
8383838385816BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
end
%%PageTrailer
%%Trailer
%%EOF
