%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (C:/Users/mw24/AppData/Local/Temp/magick-6832i5aKPLOCYyvT)
%%CreationDate: (2018-08-31T14:30:31-04:00)
%%BoundingBox: -0 -0 67 13
%%HiResBoundingBox: 0 0 67.19 13
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 67 13
userdict begin
DisplayImage
0 0
67.19 12.7116
12
74 14
1
1
1
8
445150515151515151515151515151515151515151515151515151515151515151515151
515151515151515151515151515151515151515151515151515151515151515151515157
4FFF50D1D6D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1
D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1
D3C187FF4FCFD8D6CBCCCCCCCCCCCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCB
CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCBCBCBCBCBCBCBCBCBCBCB
CBCEC1956CFF50CDD6D8D4D1D0CBCBCBCACDCDCACBCACFCCCBCBCBCBCBCBCBCCD1D1CECA
CBCBCBCFCCCBCBCBCBCBCBCBCBCBCBCACDCECACBCBCBCBCBCBCBD1CCCACDD1D1CDCACACC
D1CFCBC5AD8E6CFF50CCD3E5BEA4AAC8CAC9CAC0C1CAC9CABDC5CAC9C9C9C9C9CBCCA6A6
B6CCC9C9C9BCC7C9C9C9C9C9C9C9C9C9C9CAC3BFCBC9C9C9C9C9CACB6EBBCDC3ACA4C5CE
CCC8A4B3D2BAA28769FF50CCDAB25D5A5FC4CDCBD7757CD7C3CE57A7CEC8CBCBC6C4C77F
525584CECBCDCC50B6CCCBC3C8CACCCAC4C8CBD58B67D9C6CBCBC8C6CCCE44AFD67C3359
6BC8CC715650A9BF9A8066FF50CBE16B7EBECDC46F5AA77C2B76C8CE4B3C99A44B60BEC4
BC42AABAD2B1585FBF3F42897BCF917C7774B4875995952368BF6859A2C4644C28B5D36D
7AE0866D727DD5B8539B9D7C64FF50CAD1CF674C89753C633B6166B7C0CA4F88AD4BAE74
67CBC3A14C4DA1BE5E475B53979B47D57459277ECF8A5E396657C365415D3F6372B140AE
D06E73CFAF4C4DA4C3D253819D7B64FF50CBCDD7DACF4C4F4B817B6078D5BAC649A9B83F
D88A55CABBC9D79A4A7174644F50BBA647DD7E5559CE96588B3E5667E852537F805686DB
4BA8CC6B78D89E535692CDC84E879C7E65FF50CBD6AD7F785D75659273785390BABE6662
97587F5C75C1B6837D626F5D806C496A6C94558646504CC487549B3B68569272688C7675
5C812AA6C867438659A0A759816178B29A8368FF50CCD99E605EA3C1795E9BC27973B8B4
B56393AB5E74BAB3B46F5E6EBBAE606088B65F9EA15E62908BB4BD865D63B28B67BB735E
A2C0775E6EB1BA99625E98BDBC9E5E75BCB3A38A6AFF50D2D5C8C5C6BCB7C3C6BDB7C3C3
B8B8B9C6BEBBC6C4B8B8B8C4C6C4B8BBC6C6C1B9C6BCBDC6C7BFC0B8B8C1C6C7BAC0C5B8
C4C6BCB8C3C6C5B9B7BEC7C6BEB8B8BDC6C3B8B9B1966EFF55BA9D909191919191919191
919191919191919191919191919191919191919191919191919191919191919191919191
9191919191919191919191919191919191919191919192896FFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
end
%%PageTrailer
%%Trailer
%%EOF
